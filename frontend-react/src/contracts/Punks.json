{
  "contractName": "Punks",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "customBaseURI_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "customBaseURI_",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "currentSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"customBaseURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"customBaseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/azharosman/Desktop/PunksWorks2/contracts/Punks.sol\":\"Punks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/azharosman/Desktop/PunksWorks2/contracts/Punks.sol\":{\"keccak256\":\"0x483de56a25984ed115f2cdc5e63f3774c1c215705113d4fe11cb800225d3118a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://159333e823abcf8d96439c43b5f9cf2c252d9cc52cde6d4cff308cd5772104ad\",\"dweb:/ipfs/QmXdpCiUNp7Q9yUQL7YBcTGPGaDLpr3FH8CXHid7rANPdQ\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001ef938038062001ef98339810160408190526200003491620001e4565b6040518060400160405280600581526020016450756e6b7360d81b8152506040518060400160405280600581526020016450554e4b5360d81b8152508160009080519060200190620000889291906200013e565b5080516200009e9060019060208401906200013e565b505050620000bb620000b5620000e860201b60201c565b620000ec565b8051620000d09060099060208401906200013e565b505066b1a2bc2ec50000600a556014600b5562000306565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200014c90620002b3565b90600052602060002090601f016020900481019282620001705760008555620001bb565b82601f106200018b57805160ff1916838001178555620001bb565b82800160010185558215620001bb579182015b82811115620001bb5782518255916020019190600101906200019e565b50620001c9929150620001cd565b5090565b5b80821115620001c95760008155600101620001ce565b60006020808385031215620001f7578182fd5b82516001600160401b03808211156200020e578384fd5b818501915085601f83011262000222578384fd5b815181811115620002375762000237620002f0565b604051601f8201601f19168101850183811182821017156200025d576200025d620002f0565b604052818152838201850188101562000274578586fd5b8592505b8183101562000297578383018501518184018601529184019162000278565b81831115620002a857858583830101525b979650505050505050565b600281046001821680620002c857607f821691505b60208210811415620002ea57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611be380620003166000396000f3fe6080604052600436106101145760003560e01c8063715018a6116100a0578063b88d4fde11610064578063b88d4fde146102e1578063c87b56dd14610301578063e985e9c514610321578063efef39a114610341578063f2fde38b1461035457610114565b8063715018a61461026d578063771282f6146102825780638da5cb5b1461029757806395d89b41146102ac578063a22cb465146102c157610114565b806323b872dd116100e757806323b872dd146101c057806342842e0e146101e057806355f804b3146102005780636352211e1461022057806370a082311461024057610114565b806301ffc9a71461011957806306fdde031461014f578063081812fc14610171578063095ea7b31461019e575b600080fd5b34801561012557600080fd5b506101396101343660046113a2565b610374565b60405161014691906114e4565b60405180910390f35b34801561015b57600080fd5b506101646103bc565b60405161014691906114ef565b34801561017d57600080fd5b5061019161018c366004611420565b61044e565b6040516101469190611493565b3480156101aa57600080fd5b506101be6101b9366004611379565b61049a565b005b3480156101cc57600080fd5b506101be6101db36600461128b565b610532565b3480156101ec57600080fd5b506101be6101fb36600461128b565b61056a565b34801561020c57600080fd5b506101be61021b3660046113da565b610585565b34801561022c57600080fd5b5061019161023b366004611420565b6105db565b34801561024c57600080fd5b5061026061025b36600461123f565b610610565b6040516101469190611a54565b34801561027957600080fd5b506101be610654565b34801561028e57600080fd5b5061026061069f565b3480156102a357600080fd5b506101916106b0565b3480156102b857600080fd5b506101646106bf565b3480156102cd57600080fd5b506101be6102dc36600461133f565b6106ce565b3480156102ed57600080fd5b506101be6102fc3660046112c6565b6106e0565b34801561030d57600080fd5b5061016461031c366004611420565b61071f565b34801561032d57600080fd5b5061013961033c366004611259565b610840565b6101be61034f366004611420565b61086e565b34801561036057600080fd5b506101be61036f36600461123f565b61092d565b60006001600160e01b031982166380ac58cd60e01b14806103a557506001600160e01b03198216635b5e139f60e01b145b806103b457506103b48261099e565b90505b919050565b6060600080546103cb90611aeb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f790611aeb565b80156104445780601f1061041957610100808354040283529160200191610444565b820191906000526020600020905b81548152906001019060200180831161042757829003601f168201915b5050505050905090565b6000610459826109b7565b61047e5760405162461bcd60e51b81526004016104759061187c565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104a5826105db565b9050806001600160a01b0316836001600160a01b031614156104d95760405162461bcd60e51b8152600401610475906119c2565b806001600160a01b03166104eb6109d4565b6001600160a01b0316148061050757506105078161033c6109d4565b6105235760405162461bcd60e51b8152600401610475906116cf565b61052d83836109d8565b505050565b61054361053d6109d4565b82610a46565b61055f5760405162461bcd60e51b815260040161047590611a03565b61052d838383610ac3565b61052d838383604051806020016040528060008152506106e0565b61058d6109d4565b6001600160a01b031661059e6106b0565b6001600160a01b0316146105c45760405162461bcd60e51b8152600401610475906118c8565b80516105d790600990602084019061111f565b5050565b6000818152600260205260408120546001600160a01b0316806103b45760405162461bcd60e51b815260040161047590611776565b60006001600160a01b0382166106385760405162461bcd60e51b81526004016104759061172c565b506001600160a01b031660009081526003602052604090205490565b61065c6109d4565b6001600160a01b031661066d6106b0565b6001600160a01b0316146106935760405162461bcd60e51b8152600401610475906118c8565b61069d6000610bf0565b565b60006106ab6008610c42565b905090565b6007546001600160a01b031690565b6060600180546103cb90611aeb565b6105d76106d96109d4565b8383610c46565b6106f16106eb6109d4565b83610a46565b61070d5760405162461bcd60e51b815260040161047590611a03565b61071984848484610ce9565b50505050565b606061072a826109b7565b6107465760405162461bcd60e51b8152600401610475906117f4565b6000828152600660205260408120805461075f90611aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461078b90611aeb565b80156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b5050505050905060006107e9610d1c565b90508051600014156107fd575090506103b7565b81511561082f578082604051602001610817929190611464565b604051602081830303815290604052925050506103b7565b61083884610d2b565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b80600a5461087c9190611a89565b34101561089b5760405162461bcd60e51b815260040161047590611995565b600a8111156108bc5760405162461bcd60e51b8152600401610475906115d1565b6108c46106b0565b6001600160a01b03166108fc82600a546108de9190611a89565b6040518115909202916000818181858888f19350505050158015610906573d6000803e3d6000fd5b5060005b818110156105d75761091b33610dae565b8061092581611b26565b91505061090a565b6109356109d4565b6001600160a01b03166109466106b0565b6001600160a01b03161461096c5760405162461bcd60e51b8152600401610475906118c8565b6001600160a01b0381166109925760405162461bcd60e51b815260040161047590611554565b61099b81610bf0565b50565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a0d826105db565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a51826109b7565b610a6d5760405162461bcd60e51b815260040161047590611683565b6000610a78836105db565b9050806001600160a01b0316846001600160a01b03161480610ab35750836001600160a01b0316610aa88461044e565b6001600160a01b0316145b8061083857506108388185610840565b826001600160a01b0316610ad6826105db565b6001600160a01b031614610afc5760405162461bcd60e51b8152600401610475906118fd565b6001600160a01b038216610b225760405162461bcd60e51b815260040161047590611608565b610b2d83838361052d565b610b386000826109d8565b6001600160a01b0383166000908152600360205260408120805460019290610b61908490611aa8565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b8f908490611a5d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b5490565b816001600160a01b0316836001600160a01b03161415610c785760405162461bcd60e51b81526004016104759061164c565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610cdc9085906114e4565b60405180910390a3505050565b610cf4848484610ac3565b610d0084848484610dfb565b6107195760405162461bcd60e51b815260040161047590611502565b6060600980546103cb90611aeb565b6060610d36826109b7565b610d525760405162461bcd60e51b815260040161047590611946565b6000610d5c610d1c565b90506000815111610d7c5760405180602001604052806000815250610da7565b80610d8684610f16565b604051602001610d97929190611464565b6040516020818303038152906040525b9392505050565b610db86008611031565b600b54610dc56008610c42565b1115610de35760405162461bcd60e51b815260040161047590611845565b6000610def6008610c42565b90506105d7828261103a565b6000610e0f846001600160a01b0316611119565b15610f0b57836001600160a01b031663150b7a02610e2b6109d4565b8786866040518563ffffffff1660e01b8152600401610e4d94939291906114a7565b602060405180830381600087803b158015610e6757600080fd5b505af1925050508015610e97575060408051601f3d908101601f19168201909252610e94918101906113be565b60015b610ef1573d808015610ec5576040519150601f19603f3d011682016040523d82523d6000602084013e610eca565b606091505b508051610ee95760405162461bcd60e51b815260040161047590611502565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610838565b506001949350505050565b606081610f3b57506040805180820190915260018152600360fc1b60208201526103b7565b8160005b8115610f655780610f4f81611b26565b9150610f5e9050600a83611a75565b9150610f3f565b60008167ffffffffffffffff811115610f8e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610fb8576020820181803683370190505b5090505b841561083857610fcd600183611aa8565b9150610fda600a86611b41565b610fe5906030611a5d565b60f81b81838151811061100857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061102a600a86611a75565b9450610fbc565b80546001019055565b6001600160a01b0382166110605760405162461bcd60e51b8152600401610475906117bf565b611069816109b7565b156110865760405162461bcd60e51b81526004016104759061159a565b6110926000838361052d565b6001600160a01b03821660009081526003602052604081208054600192906110bb908490611a5d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b82805461112b90611aeb565b90600052602060002090601f01602090048101928261114d5760008555611193565b82601f1061116657805160ff1916838001178555611193565b82800160010185558215611193579182015b82811115611193578251825591602001919060010190611178565b5061119f9291506111a3565b5090565b5b8082111561119f57600081556001016111a4565b600067ffffffffffffffff808411156111d3576111d3611b81565b604051601f8501601f1916810160200182811182821017156111f7576111f7611b81565b60405284815291508183850186101561120f57600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146103b757600080fd5b600060208284031215611250578081fd5b610da782611228565b6000806040838503121561126b578081fd5b61127483611228565b915061128260208401611228565b90509250929050565b60008060006060848603121561129f578081fd5b6112a884611228565b92506112b660208501611228565b9150604084013590509250925092565b600080600080608085870312156112db578081fd5b6112e485611228565b93506112f260208601611228565b925060408501359150606085013567ffffffffffffffff811115611314578182fd5b8501601f81018713611324578182fd5b611333878235602084016111b8565b91505092959194509250565b60008060408385031215611351578182fd5b61135a83611228565b91506020830135801515811461136e578182fd5b809150509250929050565b6000806040838503121561138b578182fd5b61139483611228565b946020939093013593505050565b6000602082840312156113b3578081fd5b8135610da781611b97565b6000602082840312156113cf578081fd5b8151610da781611b97565b6000602082840312156113eb578081fd5b813567ffffffffffffffff811115611401578182fd5b8201601f81018413611411578182fd5b610838848235602084016111b8565b600060208284031215611431578081fd5b5035919050565b60008151808452611450816020860160208601611abf565b601f01601f19169290920160200192915050565b60008351611476818460208801611abf565b83519083019061148a818360208801611abf565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114da90830184611438565b9695505050505050565b901515815260200190565b600060208252610da76020830184611438565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526017908201527f43616e74206d696e74206d6f7265207468616e2031302e000000000000000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b60208082526031908201527f45524337323155524953746f726167653a2055524920717565727920666f72206040820152703737b732bc34b9ba32b73a103a37b5b2b760791b606082015260800190565b6020808252601c908201527f50726f6a6563742069732066696e6973686564206d696e74696e672e00000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b602080825260139082015272139bdd08195b9bdd59da08115512081cd95b9d606a1b604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b60008219821115611a7057611a70611b55565b500190565b600082611a8457611a84611b6b565b500490565b6000816000190483118215151615611aa357611aa3611b55565b500290565b600082821015611aba57611aba611b55565b500390565b60005b83811015611ada578181015183820152602001611ac2565b838111156107195750506000910152565b600281046001821680611aff57607f821691505b60208210811415611b2057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611b3a57611b3a611b55565b5060010190565b600082611b5057611b50611b6b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461099b57600080fdfea2646970667358221220e2af2339fd27f588f41041c1cb8f64882e6bb7bf56f1acada78548f5cd29417c64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106101145760003560e01c8063715018a6116100a0578063b88d4fde11610064578063b88d4fde146102e1578063c87b56dd14610301578063e985e9c514610321578063efef39a114610341578063f2fde38b1461035457610114565b8063715018a61461026d578063771282f6146102825780638da5cb5b1461029757806395d89b41146102ac578063a22cb465146102c157610114565b806323b872dd116100e757806323b872dd146101c057806342842e0e146101e057806355f804b3146102005780636352211e1461022057806370a082311461024057610114565b806301ffc9a71461011957806306fdde031461014f578063081812fc14610171578063095ea7b31461019e575b600080fd5b34801561012557600080fd5b506101396101343660046113a2565b610374565b60405161014691906114e4565b60405180910390f35b34801561015b57600080fd5b506101646103bc565b60405161014691906114ef565b34801561017d57600080fd5b5061019161018c366004611420565b61044e565b6040516101469190611493565b3480156101aa57600080fd5b506101be6101b9366004611379565b61049a565b005b3480156101cc57600080fd5b506101be6101db36600461128b565b610532565b3480156101ec57600080fd5b506101be6101fb36600461128b565b61056a565b34801561020c57600080fd5b506101be61021b3660046113da565b610585565b34801561022c57600080fd5b5061019161023b366004611420565b6105db565b34801561024c57600080fd5b5061026061025b36600461123f565b610610565b6040516101469190611a54565b34801561027957600080fd5b506101be610654565b34801561028e57600080fd5b5061026061069f565b3480156102a357600080fd5b506101916106b0565b3480156102b857600080fd5b506101646106bf565b3480156102cd57600080fd5b506101be6102dc36600461133f565b6106ce565b3480156102ed57600080fd5b506101be6102fc3660046112c6565b6106e0565b34801561030d57600080fd5b5061016461031c366004611420565b61071f565b34801561032d57600080fd5b5061013961033c366004611259565b610840565b6101be61034f366004611420565b61086e565b34801561036057600080fd5b506101be61036f36600461123f565b61092d565b60006001600160e01b031982166380ac58cd60e01b14806103a557506001600160e01b03198216635b5e139f60e01b145b806103b457506103b48261099e565b90505b919050565b6060600080546103cb90611aeb565b80601f01602080910402602001604051908101604052809291908181526020018280546103f790611aeb565b80156104445780601f1061041957610100808354040283529160200191610444565b820191906000526020600020905b81548152906001019060200180831161042757829003601f168201915b5050505050905090565b6000610459826109b7565b61047e5760405162461bcd60e51b81526004016104759061187c565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104a5826105db565b9050806001600160a01b0316836001600160a01b031614156104d95760405162461bcd60e51b8152600401610475906119c2565b806001600160a01b03166104eb6109d4565b6001600160a01b0316148061050757506105078161033c6109d4565b6105235760405162461bcd60e51b8152600401610475906116cf565b61052d83836109d8565b505050565b61054361053d6109d4565b82610a46565b61055f5760405162461bcd60e51b815260040161047590611a03565b61052d838383610ac3565b61052d838383604051806020016040528060008152506106e0565b61058d6109d4565b6001600160a01b031661059e6106b0565b6001600160a01b0316146105c45760405162461bcd60e51b8152600401610475906118c8565b80516105d790600990602084019061111f565b5050565b6000818152600260205260408120546001600160a01b0316806103b45760405162461bcd60e51b815260040161047590611776565b60006001600160a01b0382166106385760405162461bcd60e51b81526004016104759061172c565b506001600160a01b031660009081526003602052604090205490565b61065c6109d4565b6001600160a01b031661066d6106b0565b6001600160a01b0316146106935760405162461bcd60e51b8152600401610475906118c8565b61069d6000610bf0565b565b60006106ab6008610c42565b905090565b6007546001600160a01b031690565b6060600180546103cb90611aeb565b6105d76106d96109d4565b8383610c46565b6106f16106eb6109d4565b83610a46565b61070d5760405162461bcd60e51b815260040161047590611a03565b61071984848484610ce9565b50505050565b606061072a826109b7565b6107465760405162461bcd60e51b8152600401610475906117f4565b6000828152600660205260408120805461075f90611aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461078b90611aeb565b80156107d85780601f106107ad576101008083540402835291602001916107d8565b820191906000526020600020905b8154815290600101906020018083116107bb57829003601f168201915b5050505050905060006107e9610d1c565b90508051600014156107fd575090506103b7565b81511561082f578082604051602001610817929190611464565b604051602081830303815290604052925050506103b7565b61083884610d2b565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b80600a5461087c9190611a89565b34101561089b5760405162461bcd60e51b815260040161047590611995565b600a8111156108bc5760405162461bcd60e51b8152600401610475906115d1565b6108c46106b0565b6001600160a01b03166108fc82600a546108de9190611a89565b6040518115909202916000818181858888f19350505050158015610906573d6000803e3d6000fd5b5060005b818110156105d75761091b33610dae565b8061092581611b26565b91505061090a565b6109356109d4565b6001600160a01b03166109466106b0565b6001600160a01b03161461096c5760405162461bcd60e51b8152600401610475906118c8565b6001600160a01b0381166109925760405162461bcd60e51b815260040161047590611554565b61099b81610bf0565b50565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600260205260409020546001600160a01b0316151590565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a0d826105db565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a51826109b7565b610a6d5760405162461bcd60e51b815260040161047590611683565b6000610a78836105db565b9050806001600160a01b0316846001600160a01b03161480610ab35750836001600160a01b0316610aa88461044e565b6001600160a01b0316145b8061083857506108388185610840565b826001600160a01b0316610ad6826105db565b6001600160a01b031614610afc5760405162461bcd60e51b8152600401610475906118fd565b6001600160a01b038216610b225760405162461bcd60e51b815260040161047590611608565b610b2d83838361052d565b610b386000826109d8565b6001600160a01b0383166000908152600360205260408120805460019290610b61908490611aa8565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b8f908490611a5d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b5490565b816001600160a01b0316836001600160a01b03161415610c785760405162461bcd60e51b81526004016104759061164c565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610cdc9085906114e4565b60405180910390a3505050565b610cf4848484610ac3565b610d0084848484610dfb565b6107195760405162461bcd60e51b815260040161047590611502565b6060600980546103cb90611aeb565b6060610d36826109b7565b610d525760405162461bcd60e51b815260040161047590611946565b6000610d5c610d1c565b90506000815111610d7c5760405180602001604052806000815250610da7565b80610d8684610f16565b604051602001610d97929190611464565b6040516020818303038152906040525b9392505050565b610db86008611031565b600b54610dc56008610c42565b1115610de35760405162461bcd60e51b815260040161047590611845565b6000610def6008610c42565b90506105d7828261103a565b6000610e0f846001600160a01b0316611119565b15610f0b57836001600160a01b031663150b7a02610e2b6109d4565b8786866040518563ffffffff1660e01b8152600401610e4d94939291906114a7565b602060405180830381600087803b158015610e6757600080fd5b505af1925050508015610e97575060408051601f3d908101601f19168201909252610e94918101906113be565b60015b610ef1573d808015610ec5576040519150601f19603f3d011682016040523d82523d6000602084013e610eca565b606091505b508051610ee95760405162461bcd60e51b815260040161047590611502565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610838565b506001949350505050565b606081610f3b57506040805180820190915260018152600360fc1b60208201526103b7565b8160005b8115610f655780610f4f81611b26565b9150610f5e9050600a83611a75565b9150610f3f565b60008167ffffffffffffffff811115610f8e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610fb8576020820181803683370190505b5090505b841561083857610fcd600183611aa8565b9150610fda600a86611b41565b610fe5906030611a5d565b60f81b81838151811061100857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061102a600a86611a75565b9450610fbc565b80546001019055565b6001600160a01b0382166110605760405162461bcd60e51b8152600401610475906117bf565b611069816109b7565b156110865760405162461bcd60e51b81526004016104759061159a565b6110926000838361052d565b6001600160a01b03821660009081526003602052604081208054600192906110bb908490611a5d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b82805461112b90611aeb565b90600052602060002090601f01602090048101928261114d5760008555611193565b82601f1061116657805160ff1916838001178555611193565b82800160010185558215611193579182015b82811115611193578251825591602001919060010190611178565b5061119f9291506111a3565b5090565b5b8082111561119f57600081556001016111a4565b600067ffffffffffffffff808411156111d3576111d3611b81565b604051601f8501601f1916810160200182811182821017156111f7576111f7611b81565b60405284815291508183850186101561120f57600080fd5b8484602083013760006020868301015250509392505050565b80356001600160a01b03811681146103b757600080fd5b600060208284031215611250578081fd5b610da782611228565b6000806040838503121561126b578081fd5b61127483611228565b915061128260208401611228565b90509250929050565b60008060006060848603121561129f578081fd5b6112a884611228565b92506112b660208501611228565b9150604084013590509250925092565b600080600080608085870312156112db578081fd5b6112e485611228565b93506112f260208601611228565b925060408501359150606085013567ffffffffffffffff811115611314578182fd5b8501601f81018713611324578182fd5b611333878235602084016111b8565b91505092959194509250565b60008060408385031215611351578182fd5b61135a83611228565b91506020830135801515811461136e578182fd5b809150509250929050565b6000806040838503121561138b578182fd5b61139483611228565b946020939093013593505050565b6000602082840312156113b3578081fd5b8135610da781611b97565b6000602082840312156113cf578081fd5b8151610da781611b97565b6000602082840312156113eb578081fd5b813567ffffffffffffffff811115611401578182fd5b8201601f81018413611411578182fd5b610838848235602084016111b8565b600060208284031215611431578081fd5b5035919050565b60008151808452611450816020860160208601611abf565b601f01601f19169290920160200192915050565b60008351611476818460208801611abf565b83519083019061148a818360208801611abf565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114da90830184611438565b9695505050505050565b901515815260200190565b600060208252610da76020830184611438565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526017908201527f43616e74206d696e74206d6f7265207468616e2031302e000000000000000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b60208082526031908201527f45524337323155524953746f726167653a2055524920717565727920666f72206040820152703737b732bc34b9ba32b73a103a37b5b2b760791b606082015260800190565b6020808252601c908201527f50726f6a6563742069732066696e6973686564206d696e74696e672e00000000604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201526839903737ba1037bbb760b91b606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b602080825260139082015272139bdd08195b9bdd59da08115512081cd95b9d606a1b604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b60008219821115611a7057611a70611b55565b500190565b600082611a8457611a84611b6b565b500490565b6000816000190483118215151615611aa357611aa3611b55565b500290565b600082821015611aba57611aba611b55565b500390565b60005b83811015611ada578181015183820152602001611ac2565b838111156107195750506000910152565b600281046001821680611aff57607f821691505b60208210811415611b2057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611b3a57611b3a611b55565b5060010190565b600082611b5057611b50611b6b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461099b57600080fdfea2646970667358221220e2af2339fd27f588f41041c1cb8f64882e6bb7bf56f1acada78548f5cd29417c64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "301:1437:1:-:0;;;535:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1375:113:4;;;;;;;;;;;;;-1:-1:-1;;;1375:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1375:113:4;;;1449:5;1441;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1464:17:4;;;;:7;;:17;;;;;:::i;:::-;;1375:113;;921:32:3;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;612:31:1;;::::1;::::0;:14:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;662:10:1::1;653:6;:19:::0;696:2:::1;682:12;:16:::0;301:1437;;640:96:10;719:10;640:96;:::o;2270:187:3:-;2362:6;;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;301:1437:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;301:1437:1;;;-1:-1:-1;301:1437:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1107:15;;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:15;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;544:2;538:9;613:2;594:13;;-1:-1:-1;;590:27:15;578:40;;574:49;;638:18;;;658:22;;;635:46;632:2;;;684:18;;:::i;:::-;720:2;713:22;744:18;;;781:11;;;777:20;;774:33;-1:-1:-1;771:2:15;;;825:6;817;810:22;771:2;852:6;843:15;;867:129;881:2;878:1;875:9;867:129;;;969:10;;;965:19;;959:26;938:14;;;934:23;;927:59;892:10;;;;867:129;;;1014:2;1011:1;1008:9;1005:2;;;1073:6;1068:2;1063;1055:6;1051:15;1047:24;1040:40;1005:2;1109:6;105:1016;-1:-1:-1;;;;;;;105:1016:15:o;1126:380::-;1211:1;1201:12;;1258:1;1248:12;;;1269:2;;1323:4;1315:6;1311:17;1301:27;;1269:2;1376;1368:6;1365:14;1345:18;1342:38;1339:2;;;1422:10;1417:3;1413:20;1410:1;1403:31;1457:4;1454:1;1447:15;1485:4;1482:1;1475:15;1339:2;;1181:325;;;:::o;1511:127::-;1572:10;1567:3;1563:20;1560:1;1553:31;1603:4;1600:1;1593:15;1627:4;1624:1;1617:15;1543:95;301:1437:1;;;;;;",
  "deployedSourceMap": "301:1437:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300:4;;;;;;;;;;-1:-1:-1;1555:300:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2473:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;;;;;-1:-1:-1;3984:217:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3522:401::-;;;;;;;;;;-1:-1:-1;3522:401:4;;;;;:::i;:::-;;:::i;:::-;;4711:330;;;;;;;;;;-1:-1:-1;4711:330:4;;;;;:::i;:::-;;:::i;5107:179::-;;;;;;;;;;-1:-1:-1;5107:179:4;;;;;:::i;:::-;;:::i;716:115:1:-;;;;;;;;;;-1:-1:-1;716:115:1;;;;;:::i;:::-;;:::i;2176:235:4:-;;;;;;;;;;-1:-1:-1;2176:235:4;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;;;;;-1:-1:-1;1914:205:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1668:101:3:-;;;;;;;;;;;;;:::i;1234:114:1:-;;;;;;;;;;;;;:::i;1036:85:3:-;;;;;;;;;;;;;:::i;2635:102:4:-;;;;;;;;;;;;;:::i;4268:153::-;;;;;;;;;;-1:-1:-1;4268:153:4;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;;;;;-1:-1:-1;5352:320:4;;;;;:::i;:::-;;:::i;467:663:7:-;;;;;;;;;;-1:-1:-1;467:663:7;;;;;:::i;:::-;;:::i;4487:162:4:-;;;;;;;;;;-1:-1:-1;4487:162:4;;;;;:::i;:::-;;:::i;841:387:1:-;;;;;;:::i;:::-;;:::i;1918:198:3:-;;;;;;;;;;-1:-1:-1;1918:198:3;;;;;:::i;:::-;;:::i;1555:300:4:-;1657:4;-1:-1:-1;;;;;;1692:40:4;;-1:-1:-1;;;1692:40:4;;:104;;-1:-1:-1;;;;;;;1748:48:4;;-1:-1:-1;;;1748:48:4;1692:104;:156;;;;1812:36;1836:11;1812:23;:36::i;:::-;1673:175;;1555:300;;;;:::o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;4087:16;4095:7;4087;:16::i;:::-;4079:73;;;;-1:-1:-1;;;4079:73:4;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4170:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:4;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:4;:2;-1:-1:-1;;;;;3659:11:4;;;3651:57;;;;-1:-1:-1;;;3651:57:4;;;;;;;:::i;:::-;3756:5;-1:-1:-1;;;;;3740:21:4;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3740:21:4;;:62;;;;3765:37;3782:5;3789:12;:10;:12::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:4;;;;;;;:::i;:::-;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3522:401;;;:::o;4711:330::-;4900:41;4919:12;:10;:12::i;:::-;4933:7;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:4;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5107:179::-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;716:115:1:-;1259:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:3;;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;793:31:1;;::::1;::::0;:14:::1;::::0;:31:::1;::::0;::::1;::::0;::::1;:::i;:::-;;716:115:::0;:::o;2176:235:4:-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:4;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:4;;;;;;;:::i;1914:205::-;1986:7;-1:-1:-1;;;;;2013:19:4;;2005:74;;;;-1:-1:-1;;;2005:74:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2096:16:4;;;;;:9;:16;;;;;;;1914:205::o;1668:101:3:-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:3;;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1234:114:1:-;1279:7;1306:19;:9;:17;:19::i;:::-;1299:26;;1234:114;:::o;1036:85:3:-;1108:6;;-1:-1:-1;;;;;1108:6:3;1036:85;:::o;2635:102:4:-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;4381:12;:10;:12::i;:::-;4395:8;4405;4362:18;:52::i;5352:320::-;5521:41;5540:12;:10;:12::i;:::-;5554:7;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:4;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;467:663:7:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:7;;;;;;;:::i;:::-;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;:8;:10::i;:::-;709:31;;819:4;813:18;835:1;813:23;809:70;;;-1:-1:-1;859:9:7;-1:-1:-1;852:16:7;;809:70;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;;;977:106;1100:23;1115:7;1100:14;:23::i;:::-;1093:30;467:663;-1:-1:-1;;;;467:663:7:o;4487:162:4:-;-1:-1:-1;;;;;4607:25:4;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162::o;841:387:1:-;933:8;924:6;;:17;;;;:::i;:::-;910:9;:32;;902:65;;;;-1:-1:-1;;;902:65:1;;;;;;;:::i;:::-;997:2;985:8;:14;;977:50;;;;-1:-1:-1;;;977:50:1;;;;;;;:::i;:::-;1089:7;:5;:7::i;:::-;-1:-1:-1;;;;;1081:25:1;:44;1116:8;1107:6;;:17;;;;:::i;:::-;1081:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:6;1135:87;1155:8;1151:1;:12;1135:87;;;1184:27;1200:10;1184:15;:27::i;:::-;1165:3;;;;:::i;:::-;;;;1135:87;;1918:198:3;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:3;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:3;;1240:68;;;;-1:-1:-1;;;1240:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:3;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:3::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;829:155:13:-;-1:-1:-1;;;;;;937:40:13;;-1:-1:-1;;;937:40:13;829:155;;;:::o;7144:125:4:-;7209:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:4;:30;;;7144:125::o;640:96:10:-;719:10;640:96;:::o;10995:171:4:-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:4;-1:-1:-1;;;;;11069:29:4;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:4;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7544:16;7552:7;7544;:16::i;:::-;7536:73;;;;-1:-1:-1;;;7536:73:4;;;;;;;:::i;:::-;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:4;:7;-1:-1:-1;;;;;7676:16:4;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:4;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:4;;7676:51;:87;;;;7731:32;7748:5;7755:7;7731:16;:32::i;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:4;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:4;;10443:85;;;;-1:-1:-1;;;10443:85:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10546:16:4;;10538:65;;;;-1:-1:-1;;;10538:65:4;;;;;;;:::i;:::-;10614:39;10635:4;10641:2;10645:7;10614:20;:39::i;:::-;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:4;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:4;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:4;-1:-1:-1;;;;;10813:21:4;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;2270:187:3:-;2362:6;;;-1:-1:-1;;;;;2378:17:3;;;-1:-1:-1;;;;;;2378:17:3;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2270:187;;:::o;827:112:11:-;918:14;;827:112::o;11301:307:4:-;11451:8;-1:-1:-1;;;;;11442:17:4;:5;-1:-1:-1;;;;;11442:17:4;;;11434:55;;;;-1:-1:-1;;;11434:55:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11499:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:4;;;;;;;11560:41;;;;;11499:46;;11560:41;:::i;:::-;;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:4;;;;;;;:::i;1624:112:1:-;1683:13;1715:14;1708:21;;;;;:::i;2803:329:4:-;2876:13;2909:16;2917:7;2909;:16::i;:::-;2901:76;;;;-1:-1:-1;;;2901:76:4;;;;;;;:::i;:::-;2988:21;3012:10;:8;:10::i;:::-;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:4:o;1354:264:1:-;1416:21;:9;:19;:21::i;:::-;1478:12;;1455:19;:9;:17;:19::i;:::-;:35;;1447:76;;;;-1:-1:-1;;;1447:76:1;;;;;;;:::i;:::-;1534:17;1554:19;:9;:17;:19::i;:::-;1534:39;;1583:27;1589:9;1600;1583:5;:27::i;12161:778:4:-;12311:4;12331:15;:2;-1:-1:-1;;;;;12331:13:4;;:15::i;:::-;12327:606;;;12382:2;-1:-1:-1;;;;;12366:36:4;;12403:12;:10;:12::i;:::-;12417:4;12423:7;12432:5;12366:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:4;;;;;;;;-1:-1:-1;;12366:72:4;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:4;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:4;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:4;-1:-1:-1;;;12488:51:4;;-1:-1:-1;12481:58:4;;12327:606;-1:-1:-1;12918:4:4;12161:778;;;;;;:::o;328:703:12:-;384:13;601:10;597:51;;-1:-1:-1;627:10:12;;;;;;;;;;;;-1:-1:-1;;;627:10:12;;;;;;597:51;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:12;;-1:-1:-1;773:2:12;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;-1:-1:-1;;;817:17:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:12;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:12;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;-1:-1:-1;;;902:14:12;;;;;;;;;;;;:56;-1:-1:-1;;;;;902:56:12;;;;;;;;-1:-1:-1;972:11:12;981:2;972:11;;:::i;:::-;;;844:150;;945:123:11;1032:19;;1050:1;1032:19;;;945:123::o;9063:372:4:-;-1:-1:-1;;;;;9142:16:4;;9134:61;;;;-1:-1:-1;;;9134:61:4;;;;;;;:::i;:::-;9214:16;9222:7;9214;:16::i;:::-;9213:17;9205:58;;;;-1:-1:-1;;;9205:58:4;;;;;;;:::i;:::-;9274:45;9303:1;9307:2;9311:7;9274:20;:45::i;:::-;-1:-1:-1;;;;;9330:13:4;;;;;;:9;:13;;;;;:18;;9347:1;;9330:13;:18;;9347:1;;9330:18;:::i;:::-;;;;-1:-1:-1;;9358:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9358:21:4;-1:-1:-1;;;;;9358:21:4;;;;;;;;9395:33;;9358:16;;;9395:33;;9358:16;;9395:33;9063:372;;:::o;771:377:9:-;1087:20;1133:8;;;771:377::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:607:15;;110:18;151:2;143:6;140:14;137:2;;;157:18;;:::i;:::-;206:2;200:9;279:2;256:17;;-1:-1:-1;;252:31:15;240:44;;286:4;236:55;306:18;;;326:22;;;303:46;300:2;;;352:18;;:::i;:::-;388:2;381:22;436;;;421:6;-1:-1:-1;421:6:15;473:16;;;470:25;-1:-1:-1;467:2:15;;;508:1;505;498:12;467:2;558:6;553:3;546:4;538:6;534:17;521:44;613:1;606:4;597:6;589;585:19;581:30;574:41;;;90:531;;;;;:::o;626:175::-;696:20;;-1:-1:-1;;;;;745:31:15;;735:42;;725:2;;791:1;788;781:12;806:198;;918:2;906:9;897:7;893:23;889:32;886:2;;;939:6;931;924:22;886:2;967:31;988:9;967:31;:::i;1009:274::-;;;1138:2;1126:9;1117:7;1113:23;1109:32;1106:2;;;1159:6;1151;1144:22;1106:2;1187:31;1208:9;1187:31;:::i;:::-;1177:41;;1237:40;1273:2;1262:9;1258:18;1237:40;:::i;:::-;1227:50;;1096:187;;;;;:::o;1288:342::-;;;;1434:2;1422:9;1413:7;1409:23;1405:32;1402:2;;;1455:6;1447;1440:22;1402:2;1483:31;1504:9;1483:31;:::i;:::-;1473:41;;1533:40;1569:2;1558:9;1554:18;1533:40;:::i;:::-;1523:50;;1620:2;1609:9;1605:18;1592:32;1582:42;;1392:238;;;;;:::o;1635:702::-;;;;;1807:3;1795:9;1786:7;1782:23;1778:33;1775:2;;;1829:6;1821;1814:22;1775:2;1857:31;1878:9;1857:31;:::i;:::-;1847:41;;1907:40;1943:2;1932:9;1928:18;1907:40;:::i;:::-;1897:50;;1994:2;1983:9;1979:18;1966:32;1956:42;;2049:2;2038:9;2034:18;2021:32;2076:18;2068:6;2065:30;2062:2;;;2113:6;2105;2098:22;2062:2;2141:22;;2194:4;2186:13;;2182:27;-1:-1:-1;2172:2:15;;2228:6;2220;2213:22;2172:2;2256:75;2323:7;2318:2;2305:16;2300:2;2296;2292:11;2256:75;:::i;:::-;2246:85;;;1765:572;;;;;;;:::o;2342:369::-;;;2468:2;2456:9;2447:7;2443:23;2439:32;2436:2;;;2489:6;2481;2474:22;2436:2;2517:31;2538:9;2517:31;:::i;:::-;2507:41;;2598:2;2587:9;2583:18;2570:32;2645:5;2638:13;2631:21;2624:5;2621:32;2611:2;;2672:6;2664;2657:22;2611:2;2700:5;2690:15;;;2426:285;;;;;:::o;2716:266::-;;;2845:2;2833:9;2824:7;2820:23;2816:32;2813:2;;;2866:6;2858;2851:22;2813:2;2894:31;2915:9;2894:31;:::i;:::-;2884:41;2972:2;2957:18;;;;2944:32;;-1:-1:-1;;;2803:179:15:o;2987:257::-;;3098:2;3086:9;3077:7;3073:23;3069:32;3066:2;;;3119:6;3111;3104:22;3066:2;3163:9;3150:23;3182:32;3208:5;3182:32;:::i;3249:261::-;;3371:2;3359:9;3350:7;3346:23;3342:32;3339:2;;;3392:6;3384;3377:22;3339:2;3429:9;3423:16;3448:32;3474:5;3448:32;:::i;3515:482::-;;3637:2;3625:9;3616:7;3612:23;3608:32;3605:2;;;3658:6;3650;3643:22;3605:2;3703:9;3690:23;3736:18;3728:6;3725:30;3722:2;;;3773:6;3765;3758:22;3722:2;3801:22;;3854:4;3846:13;;3842:27;-1:-1:-1;3832:2:15;;3888:6;3880;3873:22;3832:2;3916:75;3983:7;3978:2;3965:16;3960:2;3956;3952:11;3916:75;:::i;4002:190::-;;4114:2;4102:9;4093:7;4089:23;4085:32;4082:2;;;4135:6;4127;4120:22;4082:2;-1:-1:-1;4163:23:15;;4072:120;-1:-1:-1;4072:120:15:o;4197:259::-;;4278:5;4272:12;4305:6;4300:3;4293:19;4321:63;4377:6;4370:4;4365:3;4361:14;4354:4;4347:5;4343:16;4321:63;:::i;:::-;4438:2;4417:15;-1:-1:-1;;4413:29:15;4404:39;;;;4445:4;4400:50;;4248:208;-1:-1:-1;;4248:208:15:o;4461:470::-;;4678:6;4672:13;4694:53;4740:6;4735:3;4728:4;4720:6;4716:17;4694:53;:::i;:::-;4810:13;;4769:16;;;;4832:57;4810:13;4769:16;4866:4;4854:17;;4832:57;:::i;:::-;4905:20;;4648:283;-1:-1:-1;;;;4648:283:15:o;4936:203::-;-1:-1:-1;;;;;5100:32:15;;;;5082:51;;5070:2;5055:18;;5037:102::o;5144:490::-;-1:-1:-1;;;;;5413:15:15;;;5395:34;;5465:15;;5460:2;5445:18;;5438:43;5512:2;5497:18;;5490:34;;;5560:3;5555:2;5540:18;;5533:31;;;5144:490;;5581:47;;5608:19;;5600:6;5581:47;:::i;:::-;5573:55;5347:287;-1:-1:-1;;;;;;5347:287:15:o;5639:187::-;5804:14;;5797:22;5779:41;;5767:2;5752:18;;5734:92::o;5831:221::-;;5980:2;5969:9;5962:21;6000:46;6042:2;6031:9;6027:18;6019:6;6000:46;:::i;6057:414::-;6259:2;6241:21;;;6298:2;6278:18;;;6271:30;6337:34;6332:2;6317:18;;6310:62;-1:-1:-1;;;6403:2:15;6388:18;;6381:48;6461:3;6446:19;;6231:240::o;6476:402::-;6678:2;6660:21;;;6717:2;6697:18;;;6690:30;6756:34;6751:2;6736:18;;6729:62;-1:-1:-1;;;6822:2:15;6807:18;;6800:36;6868:3;6853:19;;6650:228::o;6883:352::-;7085:2;7067:21;;;7124:2;7104:18;;;7097:30;7163;7158:2;7143:18;;7136:58;7226:2;7211:18;;7057:178::o;7240:347::-;7442:2;7424:21;;;7481:2;7461:18;;;7454:30;7520:25;7515:2;7500:18;;7493:53;7578:2;7563:18;;7414:173::o;7592:400::-;7794:2;7776:21;;;7833:2;7813:18;;;7806:30;7872:34;7867:2;7852:18;;7845:62;-1:-1:-1;;;7938:2:15;7923:18;;7916:34;7982:3;7967:19;;7766:226::o;7997:349::-;8199:2;8181:21;;;8238:2;8218:18;;;8211:30;8277:27;8272:2;8257:18;;8250:55;8337:2;8322:18;;8171:175::o;8351:408::-;8553:2;8535:21;;;8592:2;8572:18;;;8565:30;8631:34;8626:2;8611:18;;8604:62;-1:-1:-1;;;8697:2:15;8682:18;;8675:42;8749:3;8734:19;;8525:234::o;8764:420::-;8966:2;8948:21;;;9005:2;8985:18;;;8978:30;9044:34;9039:2;9024:18;;9017:62;9115:26;9110:2;9095:18;;9088:54;9174:3;9159:19;;8938:246::o;9189:406::-;9391:2;9373:21;;;9430:2;9410:18;;;9403:30;9469:34;9464:2;9449:18;;9442:62;-1:-1:-1;;;9535:2:15;9520:18;;9513:40;9585:3;9570:19;;9363:232::o;9600:405::-;9802:2;9784:21;;;9841:2;9821:18;;;9814:30;9880:34;9875:2;9860:18;;9853:62;-1:-1:-1;;;9946:2:15;9931:18;;9924:39;9995:3;9980:19;;9774:231::o;10010:356::-;10212:2;10194:21;;;10231:18;;;10224:30;10290:34;10285:2;10270:18;;10263:62;10357:2;10342:18;;10184:182::o;10371:413::-;10573:2;10555:21;;;10612:2;10592:18;;;10585:30;10651:34;10646:2;10631:18;;10624:62;-1:-1:-1;;;10717:2:15;10702:18;;10695:47;10774:3;10759:19;;10545:239::o;10789:352::-;10991:2;10973:21;;;11030:2;11010:18;;;11003:30;11069;11064:2;11049:18;;11042:58;11132:2;11117:18;;10963:178::o;11146:408::-;11348:2;11330:21;;;11387:2;11367:18;;;11360:30;11426:34;11421:2;11406:18;;11399:62;-1:-1:-1;;;11492:2:15;11477:18;;11470:42;11544:3;11529:19;;11320:234::o;11559:356::-;11761:2;11743:21;;;11780:18;;;11773:30;11839:34;11834:2;11819:18;;11812:62;11906:2;11891:18;;11733:182::o;11920:405::-;12122:2;12104:21;;;12161:2;12141:18;;;12134:30;12200:34;12195:2;12180:18;;12173:62;-1:-1:-1;;;12266:2:15;12251:18;;12244:39;12315:3;12300:19;;12094:231::o;12330:411::-;12532:2;12514:21;;;12571:2;12551:18;;;12544:30;12610:34;12605:2;12590:18;;12583:62;-1:-1:-1;;;12676:2:15;12661:18;;12654:45;12731:3;12716:19;;12504:237::o;12746:343::-;12948:2;12930:21;;;12987:2;12967:18;;;12960:30;-1:-1:-1;;;13021:2:15;13006:18;;12999:49;13080:2;13065:18;;12920:169::o;13094:397::-;13296:2;13278:21;;;13335:2;13315:18;;;13308:30;13374:34;13369:2;13354:18;;13347:62;-1:-1:-1;;;13440:2:15;13425:18;;13418:31;13481:3;13466:19;;13268:223::o;13496:413::-;13698:2;13680:21;;;13737:2;13717:18;;;13710:30;13776:34;13771:2;13756:18;;13749:62;-1:-1:-1;;;13842:2:15;13827:18;;13820:47;13899:3;13884:19;;13670:239::o;13914:177::-;14060:25;;;14048:2;14033:18;;14015:76::o;14096:128::-;;14167:1;14163:6;14160:1;14157:13;14154:2;;;14173:18;;:::i;:::-;-1:-1:-1;14209:9:15;;14144:80::o;14229:120::-;;14295:1;14285:2;;14300:18;;:::i;:::-;-1:-1:-1;14334:9:15;;14275:74::o;14354:168::-;;14460:1;14456;14452:6;14448:14;14445:1;14442:21;14437:1;14430:9;14423:17;14419:45;14416:2;;;14467:18;;:::i;:::-;-1:-1:-1;14507:9:15;;14406:116::o;14527:125::-;;14595:1;14592;14589:8;14586:2;;;14600:18;;:::i;:::-;-1:-1:-1;14637:9:15;;14576:76::o;14657:258::-;14729:1;14739:113;14753:6;14750:1;14747:13;14739:113;;;14829:11;;;14823:18;14810:11;;;14803:39;14775:2;14768:10;14739:113;;;14870:6;14867:1;14864:13;14861:2;;;-1:-1:-1;;14905:1:15;14887:16;;14880:27;14710:205::o;14920:380::-;15005:1;14995:12;;15052:1;15042:12;;;15063:2;;15117:4;15109:6;15105:17;15095:27;;15063:2;15170;15162:6;15159:14;15139:18;15136:38;15133:2;;;15216:10;15211:3;15207:20;15204:1;15197:31;15251:4;15248:1;15241:15;15279:4;15276:1;15269:15;15133:2;;14975:325;;;:::o;15305:135::-;;-1:-1:-1;;15365:17:15;;15362:2;;;15385:18;;:::i;:::-;-1:-1:-1;15432:1:15;15421:13;;15352:88::o;15445:112::-;;15503:1;15493:2;;15508:18;;:::i;:::-;-1:-1:-1;15542:9:15;;15483:74::o;15562:127::-;15623:10;15618:3;15614:20;15611:1;15604:31;15654:4;15651:1;15644:15;15678:4;15675:1;15668:15;15694:127;15755:10;15750:3;15746:20;15743:1;15736:31;15786:4;15783:1;15776:15;15810:4;15807:1;15800:15;15826:127;15887:10;15882:3;15878:20;15875:1;15868:31;15918:4;15915:1;15908:15;15942:4;15939:1;15932:15;15958:133;-1:-1:-1;;;;;;16034:32:15;;16024:43;;16014:2;;16081:1;16078;16071:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Punks is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    string private _customBaseURI;\n    uint256 private _price;\n    uint256 private _maxMintable;\n    \n    constructor(string memory customBaseURI_) ERC721(\"Punks\", \"PUNKS\") {\n        _customBaseURI = customBaseURI_;\n        _price = 0.05 ether;\n        _maxMintable =20;\n    }\n\n    \n    function setBaseURI(string memory customBaseURI_) public onlyOwner {\n        _customBaseURI = customBaseURI_;\n    }\n    \n    function purchase(uint256 quantity) public payable {\n        require(msg.value >= (_price * quantity),  \"Not enough ETH sent\");\n        require(quantity <= 10, \"Cant mint more than 10.\"); //Purchase quantity also in testJS\n        \n        payable(owner()).transfer(_price * quantity);\n        for(uint i = 0; i < quantity; i++) {\n            mintForPurchase(msg.sender);\n        }\n    }\n\n    function currentSupply() public view returns(uint256) { \n        return _tokenIds.current(); //curent supply\n    }\n\n    function mintForPurchase(address recipient) private {\n        _tokenIds.increment();\n        require(_tokenIds.current() <= _maxMintable, \"Project is finished minting.\");\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(recipient, newItemId);\n\n    }\n\n    function _baseURI() internal view virtual override returns(string memory) {\n        return _customBaseURI;\n    }\n}",
  "sourcePath": "/Users/azharosman/Desktop/PunksWorks2/contracts/Punks.sol",
  "ast": {
    "absolutePath": "/Users/azharosman/Desktop/PunksWorks2/contracts/Punks.sol",
    "exportedSymbols": {
      "Address": [
        1741
      ],
      "Context": [
        1763
      ],
      "Counters": [
        1837
      ],
      "ERC165": [
        2064
      ],
      "ERC721": [
        1155
      ],
      "ERC721URIStorage": [
        1417
      ],
      "IERC165": [
        2076
      ],
      "IERC721": [
        1271
      ],
      "IERC721Metadata": [
        1444
      ],
      "IERC721Receiver": [
        1289
      ],
      "Ownable": [
        324
      ],
      "Punks": [
        196
      ],
      "Strings": [
        2040
      ]
    },
    "id": 197,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 1156,
        "src": "57:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 1418,
        "src": "115:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 41,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 1838,
        "src": "194:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 325,
        "src": "247:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1417,
              "src": "319:16:1"
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "319:16:1"
          },
          {
            "baseName": {
              "id": 45,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 324,
              "src": "337:7:1"
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "337:7:1"
          }
        ],
        "contractDependencies": [
          324,
          1155,
          1271,
          1417,
          1444,
          1763,
          2064,
          2076
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 196,
        "linearizedBaseContracts": [
          196,
          324,
          1417,
          1155,
          1444,
          1271,
          2064,
          2076,
          1763
        ],
        "name": "Punks",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 50,
            "libraryName": {
              "id": 47,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1837,
              "src": "357:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "351:36:1",
            "typeName": {
              "id": 49,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1769,
                "src": "370:16:1"
              },
              "referencedDeclaration": 1769,
              "src": "370:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1769_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "392:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1769_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 52,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1769,
                "src": "392:16:1"
              },
              "referencedDeclaration": 1769,
              "src": "392:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1769_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "_customBaseURI",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "433:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "433:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "_price",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "468:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "_maxMintable",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "496:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "496:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "602:103:1",
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "_customBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "612:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "customBaseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "629:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "612:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "612:31:1"
                },
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "653:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e3035",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "662:10:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000_by_1",
                        "typeString": "int_const 50000000000000000"
                      },
                      "value": "0.05"
                    },
                    "src": "653:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "653:19:1"
                },
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76,
                      "name": "_maxMintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "682:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3230",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "682:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "682:16:1"
                }
              ]
            },
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50756e6b73",
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "584:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_10dd5ef2dc2408ac1fa25543a99845bc726f2dc25a405a452c0b9b454e7423c2",
                      "typeString": "literal_string \"Punks\""
                    },
                    "value": "Punks"
                  },
                  {
                    "hexValue": "50554e4b53",
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "593:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8a93d180722d35e7bad6c51783a694c9bb7f479b8c0b2ffea77c18dead6877b0",
                      "typeString": "literal_string \"PUNKS\""
                    },
                    "value": "PUNKS"
                  }
                ],
                "id": 66,
                "modifierName": {
                  "id": 63,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "577:6:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "577:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "customBaseURI_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "547:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "546:30:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:1"
            },
            "scope": 196,
            "src": "535:170:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "783:48:1",
              "statements": [
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "_customBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "793:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89,
                      "name": "customBaseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "810:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "793:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "793:31:1"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86,
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 266,
                  "src": "773:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "773:9:1"
              }
            ],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "customBaseURI_",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "736:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:30:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:1"
            },
            "scope": 196,
            "src": "716:115:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "892:336:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "910:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "910:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 101,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "924:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 102,
                                "name": "quantity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "933:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "924:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 104,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "923:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "910:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204554482073656e74",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "945:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af5ae6b7a44c240c2a4cde4b6d5b80cea7a3969fe2eaf4511f79a4934c899146",
                          "typeString": "literal_string \"Not enough ETH sent\""
                        },
                        "value": "Not enough ETH sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af5ae6b7a44c240c2a4cde4b6d5b80cea7a3969fe2eaf4511f79a4934c899146",
                          "typeString": "literal_string \"Not enough ETH sent\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "902:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "902:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 110,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "985:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "997:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "985:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e74206d696e74206d6f7265207468616e2031302e",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c1965bf6de99bf05f28c42fd432c80c0dda7d478ee07bbe8a93cec35cb86d4",
                          "typeString": "literal_string \"Cant mint more than 10.\""
                        },
                        "value": "Cant mint more than 10."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c1965bf6de99bf05f28c42fd432c80c0dda7d478ee07bbe8a93cec35cb86d4",
                          "typeString": "literal_string \"Cant mint more than 10.\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "977:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "977:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 122,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1107:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 123,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1116:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1107:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 118,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "1089:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1089:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1081:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1081:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1081:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1081:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:44:1"
                },
                {
                  "body": {
                    "id": 142,
                    "nodeType": "Block",
                    "src": "1170:52:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 138,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1200:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1200:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 137,
                            "name": "mintForPurchase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "1184:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1184:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1184:27:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 131,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1151:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 132,
                      "name": "quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1155:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1151:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "initializationExpression": {
                    "assignments": [
                      128
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "1139:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 130,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1148:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1139:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1165:3:1",
                      "subExpression": {
                        "id": 134,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1165:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 136,
                    "nodeType": "ExpressionStatement",
                    "src": "1165:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1135:87:1"
                }
              ]
            },
            "functionSelector": "efef39a1",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "859:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:18:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "892:0:1"
            },
            "scope": 196,
            "src": "841:387:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1288:60:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 150,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1306:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1769_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1781,
                      "src": "1306:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1769_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 149,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "1299:26:1"
                }
              ]
            },
            "functionSelector": "771282f6",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:2:1"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1279:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:9:1"
            },
            "scope": 196,
            "src": "1234:114:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "1406:212:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 160,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1416:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1769_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "1416:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1769_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 166,
                              "name": "_tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "1455:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1769_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1781,
                            "src": "1455:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1769_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 169,
                          "name": "_maxMintable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1478:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1455:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a6563742069732066696e6973686564206d696e74696e672e",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1492:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_920869dbd5546f0020b45c468d7ac0ab4121fc0cb1bfe0236ea2d13f187550d7",
                          "typeString": "literal_string \"Project is finished minting.\""
                        },
                        "value": "Project is finished minting."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_920869dbd5546f0020b45c468d7ac0ab4121fc0cb1bfe0236ea2d13f187550d7",
                          "typeString": "literal_string \"Project is finished minting.\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1447:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:76:1"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "1534:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 176,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1554:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1769_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1781,
                      "src": "1554:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1769_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1534:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1589:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "1600:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 180,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "1583:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:27:1"
                }
              ]
            },
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintForPurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1379:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:19:1"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:1"
            },
            "scope": 196,
            "src": "1354:264:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              541
            ],
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "1698:38:1",
              "statements": [
                {
                  "expression": {
                    "id": 192,
                    "name": "_customBaseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "1715:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 191,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "1708:21:1"
                }
              ]
            },
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 188,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1666:8:1"
            },
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1641:2:1"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "1683:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1682:15:1"
            },
            "scope": 196,
            "src": "1624:112:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 197,
        "src": "301:1437:1"
      }
    ],
    "src": "32:1706:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/azharosman/Desktop/PunksWorks2/contracts/Punks.sol",
    "exportedSymbols": {
      "Address": [
        1741
      ],
      "Context": [
        1763
      ],
      "Counters": [
        1837
      ],
      "ERC165": [
        2064
      ],
      "ERC721": [
        1155
      ],
      "ERC721URIStorage": [
        1417
      ],
      "IERC165": [
        2076
      ],
      "IERC721": [
        1271
      ],
      "IERC721Metadata": [
        1444
      ],
      "IERC721Receiver": [
        1289
      ],
      "Ownable": [
        324
      ],
      "Punks": [
        196
      ],
      "Strings": [
        2040
      ]
    },
    "id": 197,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 1156,
        "src": "57:57:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 1418,
        "src": "115:78:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 41,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 1838,
        "src": "194:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 197,
        "sourceUnit": 325,
        "src": "247:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1417,
              "src": "319:16:1"
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "319:16:1"
          },
          {
            "baseName": {
              "id": 45,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 324,
              "src": "337:7:1"
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "337:7:1"
          }
        ],
        "contractDependencies": [
          324,
          1155,
          1271,
          1417,
          1444,
          1763,
          2064,
          2076
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 196,
        "linearizedBaseContracts": [
          196,
          324,
          1417,
          1155,
          1444,
          1271,
          2064,
          2076,
          1763
        ],
        "name": "Punks",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 50,
            "libraryName": {
              "id": 47,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1837,
              "src": "357:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "351:36:1",
            "typeName": {
              "id": 49,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1769,
                "src": "370:16:1"
              },
              "referencedDeclaration": 1769,
              "src": "370:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1769_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 53,
            "mutability": "mutable",
            "name": "_tokenIds",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "392:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1769_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 52,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1769,
                "src": "392:16:1"
              },
              "referencedDeclaration": 1769,
              "src": "392:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1769_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 55,
            "mutability": "mutable",
            "name": "_customBaseURI",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "433:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 54,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "433:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 57,
            "mutability": "mutable",
            "name": "_price",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "468:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 56,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 59,
            "mutability": "mutable",
            "name": "_maxMintable",
            "nodeType": "VariableDeclaration",
            "scope": 196,
            "src": "496:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 58,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "496:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "602:103:1",
              "statements": [
                {
                  "expression": {
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68,
                      "name": "_customBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "612:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69,
                      "name": "customBaseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "629:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "612:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "612:31:1"
                },
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "653:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "302e3035",
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "662:10:1",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000_by_1",
                        "typeString": "int_const 50000000000000000"
                      },
                      "value": "0.05"
                    },
                    "src": "653:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "653:19:1"
                },
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 76,
                      "name": "_maxMintable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "682:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3230",
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "696:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "682:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "682:16:1"
                }
              ]
            },
            "id": 81,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50756e6b73",
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "584:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_10dd5ef2dc2408ac1fa25543a99845bc726f2dc25a405a452c0b9b454e7423c2",
                      "typeString": "literal_string \"Punks\""
                    },
                    "value": "Punks"
                  },
                  {
                    "hexValue": "50554e4b53",
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "593:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8a93d180722d35e7bad6c51783a694c9bb7f479b8c0b2ffea77c18dead6877b0",
                      "typeString": "literal_string \"PUNKS\""
                    },
                    "value": "PUNKS"
                  }
                ],
                "id": 66,
                "modifierName": {
                  "id": 63,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1155,
                  "src": "577:6:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "577:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "customBaseURI_",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "547:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "547:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "546:30:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:1"
            },
            "scope": 196,
            "src": "535:170:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "783:48:1",
              "statements": [
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88,
                      "name": "_customBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "793:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89,
                      "name": "customBaseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "810:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "793:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "793:31:1"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86,
                "modifierName": {
                  "id": 85,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 266,
                  "src": "773:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "773:9:1"
              }
            ],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "customBaseURI_",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "736:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "735:30:1"
            },
            "returnParameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:1"
            },
            "scope": 196,
            "src": "716:115:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "892:336:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "910:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "910:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 101,
                                "name": "_price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "924:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 102,
                                "name": "quantity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "933:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "924:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 104,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "923:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "910:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204554482073656e74",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "945:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af5ae6b7a44c240c2a4cde4b6d5b80cea7a3969fe2eaf4511f79a4934c899146",
                          "typeString": "literal_string \"Not enough ETH sent\""
                        },
                        "value": "Not enough ETH sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af5ae6b7a44c240c2a4cde4b6d5b80cea7a3969fe2eaf4511f79a4934c899146",
                          "typeString": "literal_string \"Not enough ETH sent\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "902:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "902:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 110,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "985:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "997:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "985:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e74206d696e74206d6f7265207468616e2031302e",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1001:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c1965bf6de99bf05f28c42fd432c80c0dda7d478ee07bbe8a93cec35cb86d4",
                          "typeString": "literal_string \"Cant mint more than 10.\""
                        },
                        "value": "Cant mint more than 10."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c1965bf6de99bf05f28c42fd432c80c0dda7d478ee07bbe8a93cec35cb86d4",
                          "typeString": "literal_string \"Cant mint more than 10.\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "977:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "977:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 122,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "1107:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 123,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "1116:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1107:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 118,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "1089:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1089:7:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1081:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 116,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1081:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1081:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1081:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1081:44:1"
                },
                {
                  "body": {
                    "id": 142,
                    "nodeType": "Block",
                    "src": "1170:52:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 138,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1200:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1200:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 137,
                            "name": "mintForPurchase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "1184:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1184:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 141,
                        "nodeType": "ExpressionStatement",
                        "src": "1184:27:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 131,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 128,
                      "src": "1151:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 132,
                      "name": "quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1155:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1151:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "initializationExpression": {
                    "assignments": [
                      128
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "1139:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1139:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 130,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1148:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1139:10:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1165:3:1",
                      "subExpression": {
                        "id": 134,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 128,
                        "src": "1165:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 136,
                    "nodeType": "ExpressionStatement",
                    "src": "1165:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "1135:87:1"
                }
              ]
            },
            "functionSelector": "efef39a1",
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "859:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "858:18:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "892:0:1"
            },
            "scope": 196,
            "src": "841:387:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1288:60:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 150,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1306:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1769_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1781,
                      "src": "1306:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1769_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 149,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "1299:26:1"
                }
              ]
            },
            "functionSelector": "771282f6",
            "id": 155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "currentSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:2:1"
            },
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1279:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:9:1"
            },
            "scope": 196,
            "src": "1234:114:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "1406:212:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 160,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1416:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1769_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1795,
                      "src": "1416:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1769_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 166,
                              "name": "_tokenIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "1455:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$1769_storage",
                                "typeString": "struct Counters.Counter storage ref"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1781,
                            "src": "1455:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1769_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                              "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1455:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 169,
                          "name": "_maxMintable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "1478:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1455:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f6a6563742069732066696e6973686564206d696e74696e672e",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1492:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_920869dbd5546f0020b45c468d7ac0ab4121fc0cb1bfe0236ea2d13f187550d7",
                          "typeString": "literal_string \"Project is finished minting.\""
                        },
                        "value": "Project is finished minting."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_920869dbd5546f0020b45c468d7ac0ab4121fc0cb1bfe0236ea2d13f187550d7",
                          "typeString": "literal_string \"Project is finished minting.\""
                        }
                      ],
                      "id": 165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1447:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:76:1"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "1534:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 176,
                        "name": "_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1554:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1769_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1781,
                      "src": "1554:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1769_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1769_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1534:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 181,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "1589:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "1600:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 180,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 905,
                      "src": "1583:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:27:1"
                }
              ]
            },
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintForPurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1379:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:19:1"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:1"
            },
            "scope": 196,
            "src": "1354:264:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              541
            ],
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "1698:38:1",
              "statements": [
                {
                  "expression": {
                    "id": 192,
                    "name": "_customBaseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 55,
                    "src": "1715:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 191,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "1708:21:1"
                }
              ]
            },
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 188,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1666:8:1"
            },
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1641:2:1"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "1683:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1682:15:1"
            },
            "scope": 196,
            "src": "1624:112:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 197,
        "src": "301:1437:1"
      }
    ],
    "src": "32:1706:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x05212CA74A952F879A9e28245AF55C33CEc0FAAd",
      "transactionHash": "0x6601eb29e41ab8bf6fe0a3a797257b4d77d832100e6b5949090ed628d252eb20"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-01-18T12:25:51.918Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}